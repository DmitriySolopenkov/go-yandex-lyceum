package main

import (
	"fmt"
	"net/http"
)

var Count int

func Fib(n int) int {
	if n < 2 {
		return n
	}
	return Fib(n-1) + Fib(n-2)
}

func helloHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, Fib(Count))
	Count++
}

func main() {
	http.HandleFunc("/", helloHandler)
	http.ListenAndServe(":8080", nil)
}

/*
Напишите веб-сервер, который будет запускаться на 8080 порту
	и принимать запросы на получение следующего числа Фибоначчи, возвращая его значение.

Примеры запросов и ответов:

curl http://localhost:8080/

# 0

curl http://localhost:8080/

# 1

curl http://localhost:8080/

# 1

curl http://localhost:8080/

# 2
Сервер не сохраняет свое состояние между перезапусками.
	Таким образом, если закрыть программу и запустить ее заново - подсчет начнется с 0.

Примечания
Числа Фибоначчи - это последовательность чисел,
	где каждое следующее число равно сумме двух предыдущих чисел.
	Например, начиная с 0 и 1, первые несколько чисел Фибоначчи будут выглядеть так:
	0, 1, 1, 2, 3, 5, 8, 13 и т.д. Э
	та последовательность часто встречается в математике, науке и программировании.
	В вашей программе вы будете вычислять числа Фибоначчи и возвращать их пользователю по запросу через веб-сервер
*/
